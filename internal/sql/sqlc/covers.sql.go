// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: covers.sql

package sql

import (
	"context"
)

const createCover = `-- name: CreateCover :one
INSERT INTO Covers (cover_id, path)
VALUES ($1, $2) RETURNING cover_id, path
`

type CreateCoverParams struct {
	CoverID string
	Path    string
}

func (q *Queries) CreateCover(ctx context.Context, arg CreateCoverParams) (Cover, error) {
	row := q.db.QueryRow(ctx, createCover, arg.CoverID, arg.Path)
	var i Cover
	err := row.Scan(&i.CoverID, &i.Path)
	return i, err
}

const getCover = `-- name: GetCover :one
SELECT cover_id, path FROM Covers
WHERE cover_id = $1 LIMIT 1
`

func (q *Queries) GetCover(ctx context.Context, coverID string) (Cover, error) {
	row := q.db.QueryRow(ctx, getCover, coverID)
	var i Cover
	err := row.Scan(&i.CoverID, &i.Path)
	return i, err
}
